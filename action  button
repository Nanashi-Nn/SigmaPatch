import { motion } from 'framer-motion';
import { ButtonHTMLAttributes } from 'react';

export interface Props extends ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: 'primary' | 'secondary';
  isLoading?: boolean;
  icon?: React.ReactNode;
}

export function ActionButton({
  children,
  variant = 'primary',
  isLoading = false,
  icon,
  disabled,
  className = '',
  ...props
}: Props) {
  const baseStyles = `
    w-full p-4 rounded-xl font-medium shadow-lg
    transition-all duration-300 relative
    disabled:opacity-50 disabled:cursor-not-allowed
  `;

  const gradientStyles = {
    primary: 'bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white',
    secondary: 'bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white'
  };

  return (
    <motion.button
      whileHover={{ scale: disabled ? 1 : 1.02 }}
      whileTap={{ scale: disabled ? 1 : 0.98 }}
      className={`${baseStyles} ${gradientStyles[variant]} ${className}`}
      disabled={disabled || isLoading}
      {...props}
    >
      <div className="flex items-center justify-center space-x-2">
        {isLoading ? (
          <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" />
        ) : (
          <>
            {icon && <span className="text-xl">{icon}</span>}
            <span>{children}</span>
          </>
        )}
      </div>
    </motion.button>
  );
}
