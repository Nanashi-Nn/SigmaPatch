import { motion, AnimatePresence } from 'framer-motion';
import { useState } from 'react';
import { IoLogoWhatsapp, IoLogoFacebook, IoLogoTwitter, IoMail, IoClose, IoCheckmark, IoLink, IoPaperPlane } from 'react-icons/io5';
import type { DeviceData } from 'utils/sharing';
import { generateMessengerLinks, formatDeviceData } from 'utils/sharing';

export interface Props {
  isOpen: boolean;
  onClose: () => void;
  deviceData: DeviceData;
}

export function ShareDialog({ isOpen, onClose, deviceData }: Props) {
  const [copySuccess, setCopySuccess] = useState(false);
  const messengerLinks = generateMessengerLinks(deviceData);

  const handleCopyLink = async () => {
    try {
      const formattedData = formatDeviceData(deviceData);
      await navigator.clipboard.writeText(formattedData.text);
      setCopySuccess(true);
      setTimeout(() => setCopySuccess(false), 2000);
    } catch (error) {
      console.error('Failed to copy:', error);
    }
  };

  const shareButtons = [
    { icon: <IoLogoWhatsapp />, name: 'WhatsApp', url: messengerLinks.whatsapp },
    { icon: <IoPaperPlane />, name: 'Telegram', url: messengerLinks.telegram },
    { icon: <IoLogoFacebook />, name: 'Facebook', url: messengerLinks.facebook },
    { icon: <IoLogoTwitter />, name: 'Twitter', url: messengerLinks.twitter },
    { icon: <IoMail />, name: 'Email', url: messengerLinks.email }
  ];

  return (
    <AnimatePresence>
      {isOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 sm:p-6 z-50">
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            exit={{ opacity: 0, scale: 0.9 }}
            className="bg-gray-900 rounded-xl p-4 sm:p-6 w-full max-w-md relative
                    max-h-[90vh] overflow-y-auto scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-gray-900"
          >
            <button
              onClick={onClose}
              className="absolute top-4 right-4 text-gray-400 hover:text-white
                    w-10 h-10 flex items-center justify-center rounded-full
                    hover:bg-gray-800 transition-colors"
            >
              <IoClose size={24} />
            </button>

            <h2 className="text-xl sm:text-2xl font-bold text-white mb-4 sm:mb-6
                    pr-8">Share Device Data</h2>

            <div className="grid grid-cols-2 sm:grid-cols-3 gap-3 sm:gap-4 mb-4 sm:mb-6">
              {shareButtons.map((button) => (
                <a
                  key={button.name}
                  href={button.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flex flex-col items-center justify-center p-3 sm:p-4
                           bg-gray-800 rounded-lg hover:bg-gray-700
                           transition-colors text-white text-center
                           min-h-[80px] sm:min-h-[90px]
                           touch-manipulation"
                >
                  <span className="text-xl sm:text-2xl mb-1 sm:mb-2">{button.icon}</span>
                  <span className="text-xs sm:text-sm">{button.name}</span>
                </a>
              ))}
            </div>

            <button
              onClick={handleCopyLink}
              className="w-full p-4 bg-blue-600 text-white rounded-lg
                       hover:bg-blue-700 transition-colors flex items-center
                       justify-center space-x-2 min-h-[48px] sm:min-h-[52px]
                       touch-manipulation"
            >
              {copySuccess ? (
                <>
                  <IoCheckmark size={20} />
                  <span>Copied!</span>
                </>
              ) : (
                <>
                  <IoLink size={20} />
                  <span>Copy to Clipboard</span>
                </>
              )}
            </button>
          </motion.div>
        </div>
      )}
    </AnimatePresence>
  );
}
